name: Mac Weekly (phrozen-custom-dev, unsigned)

on:
  schedule:
    # Friday 22:00 UTC+8 -> Friday 14:00 UTC
    - cron: '0 14 * * 5'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  check_changes:
    name: Check branch changes in last 7 days
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check.outputs.should_build }}
    steps:
      - name: Checkout repo (default branch)
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Determine if phrozen-custom-dev had commits in last week
        id: check
        shell: bash
        run: |
          set -euo pipefail
          git fetch origin phrozen-custom-dev:phrozen-custom-dev
          last_ts=$(git log -1 --format=%ct phrozen-custom-dev)
          now=$(date +%s)
          week=$((7*24*60*60))
          if [ $((now - last_ts)) -le $week ]; then
            echo "should_build=true" >> "$GITHUB_OUTPUT"
            echo "New commits detected on phrozen-custom-dev within 7 days."
          else
            echo "should_build=false" >> "$GITHUB_OUTPUT"
            echo "No new commits on phrozen-custom-dev in last 7 days. Skipping build."
          fi

  build_mac:
    name: Build macOS unsigned DMG
    needs: [check_changes]
    if: needs.check_changes.outputs.should_build == 'true'
    runs-on: macos-14
    env:
      date:
      ver:
      ver_pure:
    steps:
      - name: Checkout phrozen-custom-dev
        uses: actions/checkout@v5
        with:
          lfs: 'true'
          ref: phrozen-custom-dev

      - name: Restore deps cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/deps/build
          key: macos-14-cache-phrozenorca_deps-build-${{ hashFiles('deps/**') }}

      - uses: lukka/get-cmake@latest
        with:
          cmakeVersion: "~3.28.0"

      - name: Install tools
        run: |
          brew install libtool automake texinfo
          brew list
          mkdir -p ${{ github.workspace }}/deps/build

      - name: Free disk space
        run: |
          df -hI /dev/disk3s1s1 || true
          sudo find /Applications -maxdepth 1 -type d -name "Xcode_*.app" ! -name "Xcode_15.4.app" -exec rm -rf {} + || true
          sudo rm -rf ~/Library/Developer/CoreSimulator/Caches/* || true
          df -hI /dev/disk3s1s1 || true

      - name: Get version and date
        shell: bash
        run: |
          ver_pure=$(grep 'set(Phrozen_VERSION' version.inc | cut -d '"' -f2)
          ver=V$ver_pure
          echo "ver=$ver" >> $GITHUB_ENV
          echo "ver_pure=$ver_pure" >> $GITHUB_ENV
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Build dependencies (cache will persist)
        run: |
          brew uninstall --ignore-dependencies zstd || true
          ./build_release_macos.sh -dx -a universal -t 10.15 -1
          for arch in arm64 x86_64; do
            (cd "${{ github.workspace }}/deps/build/${arch}" && \
             find . -mindepth 1 -maxdepth 1 ! -name 'PhrozenOrca_dep' -exec rm -rf {} +) || true
          done
          brew install zstd

      - name: Build app
        run: |
          ./build_release_macos.sh -s -n -x -a universal -t 10.15 -1

      - name: Create DMG (unsigned, no notary)
        working-directory: ${{ github.workspace }}
        run: |
          ln -s /Applications ${{ github.workspace }}/build/universal/PhrozenOrca/Applications
          hdiutil create -volname "PhrozenOrca" -srcfolder ${{ github.workspace }}/build/universal/PhrozenOrca -ov -format UDZO PhrozenOrca_Mac_universal_${{ env.ver }}.dmg

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: PhrozenOrca_Mac_universal_${{ env.ver }}.dmg
          path: ${{ github.workspace }}/PhrozenOrca_Mac_universal_${{ env.ver }}.dmg

