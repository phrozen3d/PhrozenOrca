on:
  workflow_call:
    inputs:
      cache-key:
        required: true
        type: string
      cache-path:
        required: true
        type: string
      valid-cache:
        required: true
        type: boolean
      os:
        required: true
        type: string
      arch:
        required: false
        type: string
      build-deps-only:
        required: false
        type: boolean

jobs:
  build_deps:
    name: Build Deps
    if: inputs.build-deps-only || inputs.valid-cache != true
    runs-on: ${{ inputs.os }}
    env:
      date:
    steps:

      # Setup the environment
      - name: Checkout
        uses: actions/checkout@v5
        with:
          lfs: 'true'

      - name: load cached deps
        uses: actions/cache@v4
        with:
          path: ${{ inputs.cache-path }}
          key: ${{ inputs.cache-key }}

      - uses: lukka/get-cmake@latest
        with:
          cmakeVersion: "~3.28.0"  # use most recent 3.28.x version

      - name: setup dev on Windows
        if: inputs.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v2

      - name: Get the date on Ubuntu and macOS
        if: inputs.os != 'windows-latest'
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_ENV
        shell: bash

      - name: Get the date on Windows
        if: inputs.os == 'windows-latest'
        run: echo "date=$(Get-Date -Format 'yyyyMMdd')" | Out-File -Append -FilePath $env:GITHUB_ENV -Encoding utf8
        shell: pwsh


      # Build Dependencies
      - name: Build on Windows
        if: inputs.os == 'windows-latest'
        working-directory: ${{ github.workspace }}
        run: |
            choco install strawberryperl
            .\build_release_vs2022.bat deps
            .\build_release_vs2022.bat pack
            cd ${{ github.workspace }}/deps/build

      - name: Build on Mac ${{ inputs.arch }}
        if: inputs.os == 'macos-14'
        working-directory: ${{ github.workspace }}
        run: |
            brew install automake texinfo libtool
            brew list
            brew uninstall --ignore-dependencies zstd
            ./build_release_macos.sh -dx -a universal -t 10.15 -1
            for arch in arm64 x86_64; do
                (cd "${{ github.workspace }}/deps/build/${arch}" && \
                find . -mindepth 1 -maxdepth 1 ! -name 'PhrozenOrca_dep' -exec rm -rf {} +)
            done
            brew install zstd


      # Ubuntu steps removed


      # Upload Artifacts
      # - name: Upload Mac ${{ inputs.arch }} artifacts
      #   if: inputs.os == 'macos-14'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: PhrozenOrca_dep_mac_${{ env.date }}
      #     path: ${{ github.workspace }}/deps/build/PhrozenOrca_dep*.tar.gz

      - name: Upload Windows artifacts
        if: inputs.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: PhrozenOrca_dep_win64_${{ env.date }}
          path: ${{ github.workspace }}/deps/build/PhrozenOrca_dep*.zip

      # Ubuntu artifact upload removed

  build_orca:
    name: Build PhrozenOrca
    needs: [build_deps]
    if: ${{ !cancelled() && !inputs.build-deps-only && (inputs.valid-cache == true && needs.build_deps.result == 'skipped') || (inputs.valid-cache != true && success()) }}
    uses: ./.github/workflows/build_orca.yml
    with:
      cache-key: ${{ inputs.cache-key }}
      cache-path: ${{ inputs.cache-path }}
      os: ${{ inputs.os }}
      arch: ${{ inputs.arch }}
    secrets: inherit
